Usage
=====

.. _installation:

Installation
------------

Chiecthuyenngoaixa is available on `PyPI <https://pypi.org/project/chiecthuyenngoaixa/>`_.
Open a terminal or *Command Prompt* (on Windows) and run the following command:

.. code-block:: console

    pip install chiecthuyenngoaixa

If you are using `Poetry <https://python-poetry.org/>`_, use this instead:

.. code-block:: console

    poetry add chiecthuyenngoaixa

Basic usage
-----------

The library will now be available as :py:mod:`ctnx` module (abbreviation of *chiecthuyenngoaixa*).

Some commonly used functions and classes can be imported directly. For example:

* To convert Vietnamese text to ASCII-only text:

    .. doctest::
        :pyversion: >= 3.8

        >>> from ctnx import remove_diacritics
        >>> remove_diacritics("ƒê√†n ong th·∫•y c√°i lon th√¨ bu v√†o.")
        'Dan ong thay cai lon thi bu vao.'

* To convert a number to Vietnamese text:

    .. doctest::
        :pyversion: >= 3.8

        >>> from ctnx import num_to_words
        >>> num_to_words(123456789021003.45)
        'm·ªôt trƒÉm hai m∆∞∆°i ba ngh√¨n b·ªën trƒÉm nƒÉm m∆∞∆°i s√°u t·ªâ b·∫£y trƒÉm t√°m m∆∞∆°i ch√≠n tri·ªáu kh√¥ng trƒÉm hai m∆∞∆°i m·ªët ngh√¨n kh√¥ng trƒÉm linh ba ph·∫©y b·ªën m∆∞∆°i lƒÉm'

* To sort Vietnamese texts:

    .. doctest::
        :pyversion: >= 3.8

        >>> from ctnx import ViSortKey
        >>> lines = ['H√† Nam', 'H·∫£i D∆∞∆°ng', 'H√† N·ªôi', 'H√† Tƒ©nh', 'H·∫£i Ph√≤ng', 'H·∫≠u Giang', 'Ho√† B√¨nh', 'H∆∞ng Y√™n', 'H·∫° Long', 'H√† Giang', 'ƒêi·ªán Bi√™n']
        >>> sorted(lines, key=ViSortKey)
        ['ƒêi·ªán Bi√™n', 'H√† Giang', 'H√† Nam', 'H√† N·ªôi', 'H√† Tƒ©nh', 'H·∫£i D∆∞∆°ng', 'H·∫£i Ph√≤ng', 'H·∫° Long', 'H·∫≠u Giang', 'Ho√† B√¨nh', 'H∆∞ng Y√™n']

Other functions and classes are put into separate sub-modules. For example:

* To convert a likely confusing text of Vietnamese to the normal text:

    .. doctest::
        :pyversion: >= 3.8

        >>> from ctnx.misc import normalize_confusables
        >>> normalize_confusables("ùïÆùñçùñé·∫øùñà ùñôùñçùñöùñû·ªÅùñì ùñìùñåùñî√†ùñé ùñùùñÜ")
        'Chi·∫øc thuy·ªÅn ngo√†i xa'

* To extract information from a Vietnamese National Citizen ID (*CƒÉn c∆∞·ªõc c√¥ng d√¢n*) number:

    .. doctest::
        :pyversion: >= 3.8

        >>> from ctnx import validation
        >>> validation.is_valid_cccd("024192123456")
        True
        >>> validation.parse_cccd("024192123456")
        CccdResult(id='123456', is_male=False, birth_year=1992, birth_country='vn', birth_province='B·∫Øc Giang')

* To extract tones from a Vietnamese syllable or text:

    .. doctest::
        :pyversion: >= 3.8

        >>> from ctnx.misc import separate_tone
        >>> separate_tone("ƒê·∫©u")
        ('ƒê√¢u', '?')
        >>> toneNames = {'': 'thanh', '/': 's·∫Øc', '\\': 'huy·ªÅn', '?': 'h·ªèi', '~': 'ng√£', '.': 'n·∫∑ng'}
        >>> ' '.join(toneNames[separate_tone(syll)[1]] for syll in "T√¥i th·∫ßm c·∫£m ∆°n ƒê·∫©u ƒë√£ gi·ªØ m√¨nh ·ªü n√°n l·∫°i".split(' '))
        'thanh huy·ªÅn h·ªèi thanh h·ªèi ng√£ ng√£ huy·ªÅn h·ªèi s·∫Øc n·∫∑ng'

* To manipulate Vietnamese syllables:

    .. doctest::
        :pyversion: >= 3.8

        >>> from ctnx.syllable import Syllable
        >>> text = "ba ng√†y m·ªôt tr·∫≠n nh·∫π nƒÉm ng√†y m·ªôt tr·∫≠n n·∫∑ng"
        >>> a = [Syllable.from_string(x) for x in text.split(' ')]
        >>> a
        [Syllable(b, a, ), Syllable(ng, ay, , \), Syllable(m, √¥, t, .), Syllable(tr, √¢, n, .), Syllable(nh, e, , .), Syllable(n, ƒÉ, m), Syllable(ng, ay, , \), Syllable(m, √¥, t, .), Syllable(tr, √¢, n, .), Syllable(n, ƒÉ, ng, .)]
        >>> for syll in a:
        ...     syll.onset = 'nh'
        ...
        >>> a
        [Syllable(nh, a, ), Syllable(nh, ay, , \), Syllable(nh, √¥, t, .), Syllable(nh, √¢, n, .), Syllable(nh, e, , .), Syllable(nh, ƒÉ, m), Syllable(nh, ay, , \), Syllable(nh, √¥, t, .), Syllable(nh, √¢, n, .), Syllable(nh, ƒÉ, ng, .)]
        >>> ' '.join(str(x) for x in a)
        'nha nh√†y nh·ªôt nh·∫≠n nh·∫π nhƒÉm nh√†y nh·ªôt nh·∫≠n nh·∫∑ng'

See :doc:`generated/api` section for full references.